generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                  String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email               String       @unique
  name                String?
  nickname            String?
  pronouns            String?
  active              Boolean      @default(true)
  admin               Boolean      @default(false)
  hashedPassword      String
  salt                String
  resetToken          String?
  resetTokenExpiresAt DateTime?
  updatedAt           DateTime     @updatedAt
  createdAt           DateTime     @default(now())
  memberships         Membership[]
}

model Membership {
  id              String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  userId          String           @db.Uuid
  teamId          String           @db.Uuid
  team            Team             @relation(fields: [teamId], references: [id])
  user            User             @relation(fields: [userId], references: [id])
  membershipRoles MembershipRole[]

  @@unique([userId, teamId], name: "userTeamConstraint")
}

model Team {
  id          String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name        String
  active      Boolean      @default(true)
  updatedAt   DateTime     @updatedAt
  createdAt   DateTime     @default(now())
  memberships Membership[]
}

model MembershipRole {
  id           String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  membershipId String     @db.Uuid
  roleId       String     @db.Uuid
  membership   Membership @relation(fields: [membershipId], references: [id], onDelete: Cascade)
  role         Role       @relation(fields: [roleId], references: [id])

  @@unique([membershipId, roleId], name: "membershipRoleConstraint")
}

model Role {
  id              String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name            String
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @default(now()) @updatedAt
  membershipRoles MembershipRole[]
}
